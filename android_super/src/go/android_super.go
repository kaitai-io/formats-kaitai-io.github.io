// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

import (
	"github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"
	"io"
	"bytes"
)


/**
 * The metadata stored by Android at the beginning of a "super" partition, which
 * is what it calls a disk partition that holds one or more Dynamic Partitions.
 * Dynamic Partitions do more or less the same thing that LVM does on Linux,
 * allowing Android to map ranges of non-contiguous extents to a single logical
 * device. This metadata holds that mapping.
 * @see <a href="https://source.android.com/docs/core/ota/dynamic_partitions">Source</a>
 * @see <a href="https://android.googlesource.com/platform/system/core/+/refs/tags/android-11.0.0_r8/fs_mgr/liblp/include/liblp/metadata_format.h">Source</a>
 */
type AndroidSuper struct {
	_io *kaitai.Stream
	_root *AndroidSuper
	_parent kaitai.Struct
	_f_root bool
	root *AndroidSuper_Root
}
func NewAndroidSuper() *AndroidSuper {
	return &AndroidSuper{
	}
}

func (this AndroidSuper) IO_() *kaitai.Stream {
	return this._io
}

func (this *AndroidSuper) Read(io *kaitai.Stream, parent kaitai.Struct, root *AndroidSuper) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	return err
}
func (this *AndroidSuper) Root() (v *AndroidSuper_Root, err error) {
	if (this._f_root) {
		return this.root, nil
	}
	this._f_root = true
	_pos, err := this._io.Pos()
	if err != nil {
		return nil, err
	}
	_, err = this._io.Seek(int64(4096), io.SeekStart)
	if err != nil {
		return nil, err
	}
	tmp1 := NewAndroidSuper_Root()
	err = tmp1.Read(this._io, this, this._root)
	if err != nil {
		return nil, err
	}
	this.root = tmp1
	_, err = this._io.Seek(_pos, io.SeekStart)
	if err != nil {
		return nil, err
	}
	return this.root, nil
}
type AndroidSuper_Geometry struct {
	Magic []byte
	StructSize uint32
	Checksum []byte
	MetadataMaxSize uint32
	MetadataSlotCount uint32
	LogicalBlockSize uint32
	_io *kaitai.Stream
	_root *AndroidSuper
	_parent *AndroidSuper_Root
}
func NewAndroidSuper_Geometry() *AndroidSuper_Geometry {
	return &AndroidSuper_Geometry{
	}
}

func (this AndroidSuper_Geometry) IO_() *kaitai.Stream {
	return this._io
}

func (this *AndroidSuper_Geometry) Read(io *kaitai.Stream, parent *AndroidSuper_Root, root *AndroidSuper) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp2, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp2 = tmp2
	this.Magic = tmp2
	if !(bytes.Equal(this.Magic, []uint8{103, 68, 108, 97})) {
		return kaitai.NewValidationNotEqualError([]uint8{103, 68, 108, 97}, this.Magic, this._io, "/types/geometry/seq/0")
	}
	tmp3, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.StructSize = uint32(tmp3)
	tmp4, err := this._io.ReadBytes(int(32))
	if err != nil {
		return err
	}
	tmp4 = tmp4
	this.Checksum = tmp4
	tmp5, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.MetadataMaxSize = uint32(tmp5)
	tmp6, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.MetadataSlotCount = uint32(tmp6)
	tmp7, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.LogicalBlockSize = uint32(tmp7)
	return err
}

/**
 * SHA-256 hash of struct_size bytes from beginning of geometry,
 * calculated as if checksum were zeroed out
 */

type AndroidSuper_Metadata_TableKind int
const (
	AndroidSuper_Metadata_TableKind__Partitions AndroidSuper_Metadata_TableKind = 0
	AndroidSuper_Metadata_TableKind__Extents AndroidSuper_Metadata_TableKind = 1
	AndroidSuper_Metadata_TableKind__Groups AndroidSuper_Metadata_TableKind = 2
	AndroidSuper_Metadata_TableKind__BlockDevices AndroidSuper_Metadata_TableKind = 3
)
var values_AndroidSuper_Metadata_TableKind = map[AndroidSuper_Metadata_TableKind]struct{}{0: {}, 1: {}, 2: {}, 3: {}}
func (v AndroidSuper_Metadata_TableKind) isDefined() bool {
	_, ok := values_AndroidSuper_Metadata_TableKind[v]
	return ok
}
type AndroidSuper_Metadata struct {
	Magic []byte
	MajorVersion uint16
	MinorVersion uint16
	HeaderSize uint32
	HeaderChecksum []byte
	TablesSize uint32
	TablesChecksum []byte
	Partitions *AndroidSuper_Metadata_TableDescriptor
	Extents *AndroidSuper_Metadata_TableDescriptor
	Groups *AndroidSuper_Metadata_TableDescriptor
	BlockDevices *AndroidSuper_Metadata_TableDescriptor
	_io *kaitai.Stream
	_root *AndroidSuper
	_parent *AndroidSuper_Root
}
func NewAndroidSuper_Metadata() *AndroidSuper_Metadata {
	return &AndroidSuper_Metadata{
	}
}

func (this AndroidSuper_Metadata) IO_() *kaitai.Stream {
	return this._io
}

func (this *AndroidSuper_Metadata) Read(io *kaitai.Stream, parent *AndroidSuper_Root, root *AndroidSuper) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp8, err := this._io.ReadBytes(int(4))
	if err != nil {
		return err
	}
	tmp8 = tmp8
	this.Magic = tmp8
	if !(bytes.Equal(this.Magic, []uint8{48, 80, 76, 65})) {
		return kaitai.NewValidationNotEqualError([]uint8{48, 80, 76, 65}, this.Magic, this._io, "/types/metadata/seq/0")
	}
	tmp9, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.MajorVersion = uint16(tmp9)
	tmp10, err := this._io.ReadU2le()
	if err != nil {
		return err
	}
	this.MinorVersion = uint16(tmp10)
	tmp11, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.HeaderSize = uint32(tmp11)
	tmp12, err := this._io.ReadBytes(int(32))
	if err != nil {
		return err
	}
	tmp12 = tmp12
	this.HeaderChecksum = tmp12
	tmp13, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.TablesSize = uint32(tmp13)
	tmp14, err := this._io.ReadBytes(int(32))
	if err != nil {
		return err
	}
	tmp14 = tmp14
	this.TablesChecksum = tmp14
	tmp15 := NewAndroidSuper_Metadata_TableDescriptor(AndroidSuper_Metadata_TableKind__Partitions)
	err = tmp15.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Partitions = tmp15
	tmp16 := NewAndroidSuper_Metadata_TableDescriptor(AndroidSuper_Metadata_TableKind__Extents)
	err = tmp16.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Extents = tmp16
	tmp17 := NewAndroidSuper_Metadata_TableDescriptor(AndroidSuper_Metadata_TableKind__Groups)
	err = tmp17.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.Groups = tmp17
	tmp18 := NewAndroidSuper_Metadata_TableDescriptor(AndroidSuper_Metadata_TableKind__BlockDevices)
	err = tmp18.Read(this._io, this, this._root)
	if err != nil {
		return err
	}
	this.BlockDevices = tmp18
	return err
}

/**
 * SHA-256 hash of header_size bytes from beginning of metadata,
 * calculated as if header_checksum were zeroed out
 */

/**
 * SHA-256 hash of tables_size bytes from end of header
 */
type AndroidSuper_Metadata_BlockDevice struct {
	FirstLogicalSector uint64
	Alignment uint32
	AlignmentOffset uint32
	Size uint64
	PartitionName string
	FlagSlotSuffixed bool
	FlagsReserved uint64
	_io *kaitai.Stream
	_root *AndroidSuper
	_parent *AndroidSuper_Metadata_TableDescriptor
}
func NewAndroidSuper_Metadata_BlockDevice() *AndroidSuper_Metadata_BlockDevice {
	return &AndroidSuper_Metadata_BlockDevice{
	}
}

func (this AndroidSuper_Metadata_BlockDevice) IO_() *kaitai.Stream {
	return this._io
}

func (this *AndroidSuper_Metadata_BlockDevice) Read(io *kaitai.Stream, parent *AndroidSuper_Metadata_TableDescriptor, root *AndroidSuper) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp19, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.FirstLogicalSector = uint64(tmp19)
	tmp20, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Alignment = uint32(tmp20)
	tmp21, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.AlignmentOffset = uint32(tmp21)
	tmp22, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.Size = uint64(tmp22)
	tmp23, err := this._io.ReadBytes(int(36))
	if err != nil {
		return err
	}
	tmp23 = kaitai.BytesTerminate(tmp23, 0, false)
	this.PartitionName = string(tmp23)
	tmp24, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.FlagSlotSuffixed = tmp24 != 0
	tmp25, err := this._io.ReadBitsIntLe(31)
	if err != nil {
		return err
	}
	this.FlagsReserved = tmp25
	return err
}

type AndroidSuper_Metadata_Extent_TargetType int
const (
	AndroidSuper_Metadata_Extent_TargetType__Linear AndroidSuper_Metadata_Extent_TargetType = 0
	AndroidSuper_Metadata_Extent_TargetType__Zero AndroidSuper_Metadata_Extent_TargetType = 1
)
var values_AndroidSuper_Metadata_Extent_TargetType = map[AndroidSuper_Metadata_Extent_TargetType]struct{}{0: {}, 1: {}}
func (v AndroidSuper_Metadata_Extent_TargetType) isDefined() bool {
	_, ok := values_AndroidSuper_Metadata_Extent_TargetType[v]
	return ok
}
type AndroidSuper_Metadata_Extent struct {
	NumSectors uint64
	TargetType AndroidSuper_Metadata_Extent_TargetType
	TargetData uint64
	TargetSource uint32
	_io *kaitai.Stream
	_root *AndroidSuper
	_parent *AndroidSuper_Metadata_TableDescriptor
}
func NewAndroidSuper_Metadata_Extent() *AndroidSuper_Metadata_Extent {
	return &AndroidSuper_Metadata_Extent{
	}
}

func (this AndroidSuper_Metadata_Extent) IO_() *kaitai.Stream {
	return this._io
}

func (this *AndroidSuper_Metadata_Extent) Read(io *kaitai.Stream, parent *AndroidSuper_Metadata_TableDescriptor, root *AndroidSuper) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp26, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.NumSectors = uint64(tmp26)
	tmp27, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.TargetType = AndroidSuper_Metadata_Extent_TargetType(tmp27)
	tmp28, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.TargetData = uint64(tmp28)
	tmp29, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.TargetSource = uint32(tmp29)
	return err
}
type AndroidSuper_Metadata_Group struct {
	Name string
	FlagSlotSuffixed bool
	FlagsReserved uint64
	MaximumSize uint64
	_io *kaitai.Stream
	_root *AndroidSuper
	_parent *AndroidSuper_Metadata_TableDescriptor
}
func NewAndroidSuper_Metadata_Group() *AndroidSuper_Metadata_Group {
	return &AndroidSuper_Metadata_Group{
	}
}

func (this AndroidSuper_Metadata_Group) IO_() *kaitai.Stream {
	return this._io
}

func (this *AndroidSuper_Metadata_Group) Read(io *kaitai.Stream, parent *AndroidSuper_Metadata_TableDescriptor, root *AndroidSuper) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp30, err := this._io.ReadBytes(int(36))
	if err != nil {
		return err
	}
	tmp30 = kaitai.BytesTerminate(tmp30, 0, false)
	this.Name = string(tmp30)
	tmp31, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.FlagSlotSuffixed = tmp31 != 0
	tmp32, err := this._io.ReadBitsIntLe(31)
	if err != nil {
		return err
	}
	this.FlagsReserved = tmp32
	this._io.AlignToByte()
	tmp33, err := this._io.ReadU8le()
	if err != nil {
		return err
	}
	this.MaximumSize = uint64(tmp33)
	return err
}
type AndroidSuper_Metadata_Partition struct {
	Name string
	AttrReadonly bool
	AttrSlotSuffixed bool
	AttrUpdated bool
	AttrDisabled bool
	AttrsReserved uint64
	FirstExtentIndex uint32
	NumExtents uint32
	GroupIndex uint32
	_io *kaitai.Stream
	_root *AndroidSuper
	_parent *AndroidSuper_Metadata_TableDescriptor
}
func NewAndroidSuper_Metadata_Partition() *AndroidSuper_Metadata_Partition {
	return &AndroidSuper_Metadata_Partition{
	}
}

func (this AndroidSuper_Metadata_Partition) IO_() *kaitai.Stream {
	return this._io
}

func (this *AndroidSuper_Metadata_Partition) Read(io *kaitai.Stream, parent *AndroidSuper_Metadata_TableDescriptor, root *AndroidSuper) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp34, err := this._io.ReadBytes(int(36))
	if err != nil {
		return err
	}
	tmp34 = kaitai.BytesTerminate(tmp34, 0, false)
	this.Name = string(tmp34)
	tmp35, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AttrReadonly = tmp35 != 0
	tmp36, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AttrSlotSuffixed = tmp36 != 0
	tmp37, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AttrUpdated = tmp37 != 0
	tmp38, err := this._io.ReadBitsIntLe(1)
	if err != nil {
		return err
	}
	this.AttrDisabled = tmp38 != 0
	tmp39, err := this._io.ReadBitsIntLe(28)
	if err != nil {
		return err
	}
	this.AttrsReserved = tmp39
	this._io.AlignToByte()
	tmp40, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.FirstExtentIndex = uint32(tmp40)
	tmp41, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.NumExtents = uint32(tmp41)
	tmp42, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.GroupIndex = uint32(tmp42)
	return err
}
type AndroidSuper_Metadata_TableDescriptor struct {
	Offset uint32
	NumEntries uint32
	EntrySize uint32
	Kind AndroidSuper_Metadata_TableKind
	_io *kaitai.Stream
	_root *AndroidSuper
	_parent *AndroidSuper_Metadata
	_raw_table [][]byte
	_f_table bool
	table []interface{}
}
func NewAndroidSuper_Metadata_TableDescriptor(kind AndroidSuper_Metadata_TableKind) *AndroidSuper_Metadata_TableDescriptor {
	return &AndroidSuper_Metadata_TableDescriptor{
		Kind: kind,
	}
}

func (this AndroidSuper_Metadata_TableDescriptor) IO_() *kaitai.Stream {
	return this._io
}

func (this *AndroidSuper_Metadata_TableDescriptor) Read(io *kaitai.Stream, parent *AndroidSuper_Metadata, root *AndroidSuper) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp43, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.Offset = uint32(tmp43)
	tmp44, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.NumEntries = uint32(tmp44)
	tmp45, err := this._io.ReadU4le()
	if err != nil {
		return err
	}
	this.EntrySize = uint32(tmp45)
	return err
}
func (this *AndroidSuper_Metadata_TableDescriptor) Table() (v []interface{}, err error) {
	if (this._f_table) {
		return this.table, nil
	}
	this._f_table = true
	_pos, err := this._io.Pos()
	if err != nil {
		return nil, err
	}
	_, err = this._io.Seek(int64(this._parent.HeaderSize + this.Offset), io.SeekStart)
	if err != nil {
		return nil, err
	}
	for i := 0; i < int(this.NumEntries); i++ {
		_ = i
		switch (this.Kind) {
		case AndroidSuper_Metadata_TableKind__BlockDevices:
			tmp46, err := this._io.ReadBytes(int(this.EntrySize))
			if err != nil {
				return nil, err
			}
			tmp46 = tmp46
			this._raw_table = append(this._raw_table, tmp46)
			_io__raw_table := kaitai.NewStream(bytes.NewReader(this._raw_table[i]))
			tmp47 := NewAndroidSuper_Metadata_BlockDevice()
			err = tmp47.Read(_io__raw_table, this, this._root)
			if err != nil {
				return nil, err
			}
			this.table = append(this.table, tmp47)
		case AndroidSuper_Metadata_TableKind__Extents:
			tmp48, err := this._io.ReadBytes(int(this.EntrySize))
			if err != nil {
				return nil, err
			}
			tmp48 = tmp48
			this._raw_table = append(this._raw_table, tmp48)
			_io__raw_table := kaitai.NewStream(bytes.NewReader(this._raw_table[i]))
			tmp49 := NewAndroidSuper_Metadata_Extent()
			err = tmp49.Read(_io__raw_table, this, this._root)
			if err != nil {
				return nil, err
			}
			this.table = append(this.table, tmp49)
		case AndroidSuper_Metadata_TableKind__Groups:
			tmp50, err := this._io.ReadBytes(int(this.EntrySize))
			if err != nil {
				return nil, err
			}
			tmp50 = tmp50
			this._raw_table = append(this._raw_table, tmp50)
			_io__raw_table := kaitai.NewStream(bytes.NewReader(this._raw_table[i]))
			tmp51 := NewAndroidSuper_Metadata_Group()
			err = tmp51.Read(_io__raw_table, this, this._root)
			if err != nil {
				return nil, err
			}
			this.table = append(this.table, tmp51)
		case AndroidSuper_Metadata_TableKind__Partitions:
			tmp52, err := this._io.ReadBytes(int(this.EntrySize))
			if err != nil {
				return nil, err
			}
			tmp52 = tmp52
			this._raw_table = append(this._raw_table, tmp52)
			_io__raw_table := kaitai.NewStream(bytes.NewReader(this._raw_table[i]))
			tmp53 := NewAndroidSuper_Metadata_Partition()
			err = tmp53.Read(_io__raw_table, this, this._root)
			if err != nil {
				return nil, err
			}
			this.table = append(this.table, tmp53)
		default:
			tmp54, err := this._io.ReadBytes(int(this.EntrySize))
			if err != nil {
				return nil, err
			}
			tmp54 = tmp54
			this._raw_table = append(this._raw_table, tmp54)
		}
	}
	_, err = this._io.Seek(_pos, io.SeekStart)
	if err != nil {
		return nil, err
	}
	return this.table, nil
}
type AndroidSuper_Root struct {
	PrimaryGeometry *AndroidSuper_Geometry
	BackupGeometry *AndroidSuper_Geometry
	PrimaryMetadata []*AndroidSuper_Metadata
	BackupMetadata []*AndroidSuper_Metadata
	_io *kaitai.Stream
	_root *AndroidSuper
	_parent *AndroidSuper
	_raw_PrimaryGeometry []byte
	_raw_BackupGeometry []byte
	_raw_PrimaryMetadata [][]byte
	_raw_BackupMetadata [][]byte
}
func NewAndroidSuper_Root() *AndroidSuper_Root {
	return &AndroidSuper_Root{
	}
}

func (this AndroidSuper_Root) IO_() *kaitai.Stream {
	return this._io
}

func (this *AndroidSuper_Root) Read(io *kaitai.Stream, parent *AndroidSuper, root *AndroidSuper) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	tmp55, err := this._io.ReadBytes(int(4096))
	if err != nil {
		return err
	}
	tmp55 = tmp55
	this._raw_PrimaryGeometry = tmp55
	_io__raw_PrimaryGeometry := kaitai.NewStream(bytes.NewReader(this._raw_PrimaryGeometry))
	tmp56 := NewAndroidSuper_Geometry()
	err = tmp56.Read(_io__raw_PrimaryGeometry, this, this._root)
	if err != nil {
		return err
	}
	this.PrimaryGeometry = tmp56
	tmp57, err := this._io.ReadBytes(int(4096))
	if err != nil {
		return err
	}
	tmp57 = tmp57
	this._raw_BackupGeometry = tmp57
	_io__raw_BackupGeometry := kaitai.NewStream(bytes.NewReader(this._raw_BackupGeometry))
	tmp58 := NewAndroidSuper_Geometry()
	err = tmp58.Read(_io__raw_BackupGeometry, this, this._root)
	if err != nil {
		return err
	}
	this.BackupGeometry = tmp58
	for i := 0; i < int(this.PrimaryGeometry.MetadataSlotCount); i++ {
		_ = i
		tmp59, err := this._io.ReadBytes(int(this.PrimaryGeometry.MetadataMaxSize))
		if err != nil {
			return err
		}
		tmp59 = tmp59
		this._raw_PrimaryMetadata = append(this._raw_PrimaryMetadata, tmp59)
		_io__raw_PrimaryMetadata := kaitai.NewStream(bytes.NewReader(this._raw_PrimaryMetadata[i]))
		tmp60 := NewAndroidSuper_Metadata()
		err = tmp60.Read(_io__raw_PrimaryMetadata, this, this._root)
		if err != nil {
			return err
		}
		this.PrimaryMetadata = append(this.PrimaryMetadata, tmp60)
	}
	for i := 0; i < int(this.PrimaryGeometry.MetadataSlotCount); i++ {
		_ = i
		tmp61, err := this._io.ReadBytes(int(this.PrimaryGeometry.MetadataMaxSize))
		if err != nil {
			return err
		}
		tmp61 = tmp61
		this._raw_BackupMetadata = append(this._raw_BackupMetadata, tmp61)
		_io__raw_BackupMetadata := kaitai.NewStream(bytes.NewReader(this._raw_BackupMetadata[i]))
		tmp62 := NewAndroidSuper_Metadata()
		err = tmp62.Read(_io__raw_BackupMetadata, this, this._root)
		if err != nil {
			return err
		}
		this.BackupMetadata = append(this.BackupMetadata, tmp62)
	}
	return err
}
