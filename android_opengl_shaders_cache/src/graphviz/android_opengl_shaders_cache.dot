digraph {
	rankdir=LR;
	node [shape=plaintext];
	subgraph cluster__android_opengl_shaders_cache {
		label="AndroidOpenglShadersCache";
		graph[style=dotted];

		android_opengl_shaders_cache__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
			<TR><TD PORT="signature_pos">0</TD><TD PORT="signature_size">4</TD><TD>45 47 4C 24</TD><TD PORT="signature_type">signature</TD></TR>
			<TR><TD PORT="crc32_pos">4</TD><TD PORT="crc32_size">4</TD><TD>u4le</TD><TD PORT="crc32_type">crc32</TD></TR>
			<TR><TD PORT="contents_pos">8</TD><TD PORT="contents_size">â‡²</TD><TD>Cache</TD><TD PORT="contents_type">contents</TD></TR>
		</TABLE>>];
		subgraph cluster__alignment {
			label="AndroidOpenglShadersCache::Alignment";
			graph[style=dotted];

			alignment__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="alignment_pos">0</TD><TD PORT="alignment_size">((_io.pos + 3) &amp; (~3 - _io.pos))</TD><TD></TD><TD PORT="alignment_type">alignment</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__string {
			label="AndroidOpenglShadersCache::String";
			graph[style=dotted];

			string__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="length_pos">0</TD><TD PORT="length_size">4</TD><TD>u4le</TD><TD PORT="length_type">length</TD></TR>
				<TR><TD PORT="str_pos">4</TD><TD PORT="str_size">length</TD><TD>str(ascii)</TD><TD PORT="str_type">str</TD></TR>
				<TR><TD PORT="alignment_pos">...</TD><TD PORT="alignment_size">...</TD><TD>Alignment</TD><TD PORT="alignment_type">alignment</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__cache {
			label="AndroidOpenglShadersCache::Cache";
			graph[style=dotted];

			cache__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="signature_pos">0</TD><TD PORT="signature_size">4</TD><TD>24 62 42 5F</TD><TD PORT="signature_type">signature</TD></TR>
				<TR><TD PORT="version_pos">4</TD><TD PORT="version_size">4</TD><TD>u4le</TD><TD PORT="version_type">version</TD></TR>
				<TR><TD PORT="device_version_pos">8</TD><TD PORT="device_version_size">4</TD><TD>u4le</TD><TD PORT="device_version_type">device_version</TD></TR>
				<TR><TD PORT="count_of_entries_pos">12</TD><TD PORT="count_of_entries_size">4</TD><TD>u4le</TD><TD PORT="count_of_entries_type">count_of_entries</TD></TR>
				<TR><TD PORT="build_id_pos">16</TD><TD PORT="build_id_size">...</TD><TD>String</TD><TD PORT="build_id_type">build_id</TD></TR>
				<TR><TD PORT="entries_pos">...</TD><TD PORT="entries_size">...</TD><TD>Entry</TD><TD PORT="entries_type">entries</TD></TR>
				<TR><TD COLSPAN="4" PORT="entries__repeat">repeat count_of_entries times</TD></TR>
			</TABLE>>];
			subgraph cluster__entry {
				label="AndroidOpenglShadersCache::Cache::Entry";
				graph[style=dotted];

				entry__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
					<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
					<TR><TD PORT="key_size_pos">0</TD><TD PORT="key_size_size">4</TD><TD>u4le</TD><TD PORT="key_size_type">key_size</TD></TR>
					<TR><TD PORT="value_size_pos">4</TD><TD PORT="value_size_size">4</TD><TD>u4le</TD><TD PORT="value_size_type">value_size</TD></TR>
					<TR><TD PORT="key_pos">8</TD><TD PORT="key_size">key_size</TD><TD></TD><TD PORT="key_type">key</TD></TR>
					<TR><TD PORT="value_pos">...</TD><TD PORT="value_size">value_size</TD><TD></TD><TD PORT="value_type">value</TD></TR>
					<TR><TD PORT="alignment_pos">...</TD><TD PORT="alignment_size">...</TD><TD>Alignment</TD><TD PORT="alignment_type">alignment</TD></TR>
				</TABLE>>];
			}
		}
	}
	android_opengl_shaders_cache__seq:contents_type -> cache__seq [style=bold];
	string__seq:length_type -> string__seq:str_size [color="#404040"];
	string__seq:alignment_type -> alignment__seq [style=bold];
	cache__seq:build_id_type -> string__seq [style=bold];
	cache__seq:entries_type -> entry__seq [style=bold];
	cache__seq:count_of_entries_type -> cache__seq:entries__repeat [color="#404040"];
	entry__seq:key_size_type -> entry__seq:key_size [color="#404040"];
	entry__seq:value_size_type -> entry__seq:value_size [color="#404040"];
	entry__seq:alignment_type -> alignment__seq [style=bold];
}
