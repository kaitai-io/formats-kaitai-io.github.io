// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"

type SomeIpContainer struct {
	SomeIpPackages []*SomeIp
	_io *kaitai.Stream
	_root *SomeIpContainer
	_parent kaitai.Struct
}
func NewSomeIpContainer() *SomeIpContainer {
	return &SomeIpContainer{
	}
}

func (this SomeIpContainer) IO_() *kaitai.Stream {
	return this._io
}

func (this *SomeIpContainer) Read(io *kaitai.Stream, parent kaitai.Struct, root *SomeIpContainer) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 0;; i++ {
		tmp1, err := this._io.EOF()
		if err != nil {
			return err
		}
		if tmp1 {
			break
		}
		tmp2 := NewSomeIp()
		err = tmp2.Read(this._io, nil, nil)
		if err != nil {
			return err
		}
		this.SomeIpPackages = append(this.SomeIpPackages, tmp2)
	}
	return err
}
