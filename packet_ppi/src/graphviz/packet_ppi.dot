digraph {
	rankdir=LR;
	node [shape=plaintext];
	subgraph cluster__packet_ppi {
		label="PacketPpi";
		graph[style=dotted];

		packet_ppi__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
			<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
			<TR><TD PORT="header_pos">0</TD><TD PORT="header_size">...</TD><TD>PacketPpiHeader</TD><TD PORT="header_type">header</TD></TR>
			<TR><TD PORT="fields_pos">...</TD><TD PORT="fields_size">(header.pph_len - 8)</TD><TD>PacketPpiFields</TD><TD PORT="fields_type">fields</TD></TR>
			<TR><TD PORT="body_pos">...</TD><TD PORT="body_size">...</TD><TD>switch (header.pph_dlt)</TD><TD PORT="body_type">body</TD></TR>
		</TABLE>>];
packet_ppi__seq_body_switch [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<TR><TD BGCOLOR="#F0F2E4">case</TD><TD BGCOLOR="#F0F2E4">type</TD></TR>
	<TR><TD>:linktype_ppi</TD><TD PORT="case0">PacketPpi</TD></TR>
	<TR><TD>:linktype_ethernet</TD><TD PORT="case1">EthernetFrame</TD></TR>
</TABLE>>];
		subgraph cluster__packet_ppi_header {
			label="PacketPpi::PacketPpiHeader";
			graph[style=dotted];

			packet_ppi_header__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="pph_version_pos">0</TD><TD PORT="pph_version_size">1</TD><TD>u1</TD><TD PORT="pph_version_type">pph_version</TD></TR>
				<TR><TD PORT="pph_flags_pos">1</TD><TD PORT="pph_flags_size">1</TD><TD>u1</TD><TD PORT="pph_flags_type">pph_flags</TD></TR>
				<TR><TD PORT="pph_len_pos">2</TD><TD PORT="pph_len_size">2</TD><TD>u2le</TD><TD PORT="pph_len_type">pph_len</TD></TR>
				<TR><TD PORT="pph_dlt_pos">4</TD><TD PORT="pph_dlt_size">4</TD><TD>u4le→Linktype</TD><TD PORT="pph_dlt_type">pph_dlt</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__packet_ppi_fields {
			label="PacketPpi::PacketPpiFields";
			graph[style=dotted];

			packet_ppi_fields__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="entries_pos">0</TD><TD PORT="entries_size">...</TD><TD>PacketPpiField</TD><TD PORT="entries_type">entries</TD></TR>
				<TR><TD COLSPAN="4" PORT="entries__repeat">repeat to end of stream</TD></TR>
			</TABLE>>];
		}
		subgraph cluster__packet_ppi_field {
			label="PacketPpi::PacketPpiField";
			graph[style=dotted];

			packet_ppi_field__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="pfh_type_pos">0</TD><TD PORT="pfh_type_size">2</TD><TD>u2le→PfhType</TD><TD PORT="pfh_type_type">pfh_type</TD></TR>
				<TR><TD PORT="pfh_datalen_pos">2</TD><TD PORT="pfh_datalen_size">2</TD><TD>u2le</TD><TD PORT="pfh_datalen_type">pfh_datalen</TD></TR>
				<TR><TD PORT="body_pos">4</TD><TD PORT="body_size">...</TD><TD>switch (pfh_type)</TD><TD PORT="body_type">body</TD></TR>
			</TABLE>>];
packet_ppi_field__seq_body_switch [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<TR><TD BGCOLOR="#F0F2E4">case</TD><TD BGCOLOR="#F0F2E4">type</TD></TR>
	<TR><TD>:pfh_type_radio_802_11_common</TD><TD PORT="case0">Radio80211CommonBody</TD></TR>
</TABLE>>];
		}
		subgraph cluster__radio_802_11_common_body {
			label="PacketPpi::Radio80211CommonBody";
			graph[style=dotted];

			radio_802_11_common_body__seq [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
				<TR><TD BGCOLOR="#E0FFE0">pos</TD><TD BGCOLOR="#E0FFE0">size</TD><TD BGCOLOR="#E0FFE0">type</TD><TD BGCOLOR="#E0FFE0">id</TD></TR>
				<TR><TD PORT="tsf_timer_pos">0</TD><TD PORT="tsf_timer_size">8</TD><TD>u8le</TD><TD PORT="tsf_timer_type">tsf_timer</TD></TR>
				<TR><TD PORT="flags_pos">8</TD><TD PORT="flags_size">2</TD><TD>u2le</TD><TD PORT="flags_type">flags</TD></TR>
				<TR><TD PORT="rate_pos">10</TD><TD PORT="rate_size">2</TD><TD>u2le</TD><TD PORT="rate_type">rate</TD></TR>
				<TR><TD PORT="channel_freq_pos">12</TD><TD PORT="channel_freq_size">2</TD><TD>u2le</TD><TD PORT="channel_freq_type">channel_freq</TD></TR>
				<TR><TD PORT="channel_flags_pos">14</TD><TD PORT="channel_flags_size">2</TD><TD>u2le</TD><TD PORT="channel_flags_type">channel_flags</TD></TR>
				<TR><TD PORT="fhss_hopset_pos">16</TD><TD PORT="fhss_hopset_size">1</TD><TD>u1</TD><TD PORT="fhss_hopset_type">fhss_hopset</TD></TR>
				<TR><TD PORT="fhss_pattern_pos">17</TD><TD PORT="fhss_pattern_size">1</TD><TD>u1</TD><TD PORT="fhss_pattern_type">fhss_pattern</TD></TR>
				<TR><TD PORT="dbm_antsignal_pos">18</TD><TD PORT="dbm_antsignal_size">1</TD><TD>s1</TD><TD PORT="dbm_antsignal_type">dbm_antsignal</TD></TR>
				<TR><TD PORT="dbm_antnoise_pos">19</TD><TD PORT="dbm_antnoise_size">1</TD><TD>s1</TD><TD PORT="dbm_antnoise_type">dbm_antnoise</TD></TR>
			</TABLE>>];
		}
	}
	packet_ppi__seq:header_type -> packet_ppi_header__seq [style=bold];
	packet_ppi_header__seq:pph_len_type -> packet_ppi__seq:fields_size [color="#404040"];
	packet_ppi__seq:fields_type -> packet_ppi_fields__seq [style=bold];
	packet_ppi__seq:body_type -> packet_ppi__seq_body_switch [style=bold];
	packet_ppi__seq_body_switch:case0 -> packet_ppi__seq [style=bold];
	packet_ppi__seq_body_switch:case1 -> ethernet_frame__seq [style=bold];
	packet_ppi_header__seq:pph_dlt_type -> packet_ppi__seq:body_type [color="#404040"];
	packet_ppi_fields__seq:entries_type -> packet_ppi_field__seq [style=bold];
	packet_ppi_field__seq:body_type -> packet_ppi_field__seq_body_switch [style=bold];
	packet_ppi_field__seq_body_switch:case0 -> radio_802_11_common_body__seq [style=bold];
	packet_ppi_field__seq:pfh_type_type -> packet_ppi_field__seq:body_type [color="#404040"];
}
